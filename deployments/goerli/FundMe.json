{
  "address": "0x29Ec39a668B2DC4dAFcbfb268C052A763112b77D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__InsufficientEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2c59a06f0cf074098fba1a4fdc441ff6b039dd8c44758412f9e3cd22310cad9e",
  "receipt": {
    "to": null,
    "from": "0x46ac62Ea156A7476b087B986Ea312Bae06279A0C",
    "contractAddress": "0x29Ec39a668B2DC4dAFcbfb268C052A763112b77D",
    "transactionIndex": 69,
    "gasUsed": "900424",
    "logsBloom": "0x
    "blockHash": "0xca074b211c177cef4f459f8c21b9b190e1a3ecdf479507ff43aefdc710d10089",
    "transactionHash": "0x2c59a06f0cf074098fba1a4fdc441ff6b039dd8c44758412f9e3cd22310cad9e",
    "logs": [],
    "blockNumber": 8344973,
    "cumulativeGasUsed": "21783114",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "059a643969f852f7bfc63906601be33c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__InsufficientEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Diego Carranza\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"__                              _    ____/ /___ _____  ____  ____  ____  (_)_________   / __  / __ `/ __ \\\\/ __ \\\\/ __ \\\\/ __ \\\\/ / ___/ ___/  / /_/ / /_/ / /_/ / /_/ / /_/ / / / / / /__(__  )  \\\\__,_/\\\\__,_/ .___/ .___/\\\\____/_/ /_/_/\\\\___/____/            /_/   /_/This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__InsufficientEth();\\n\\n/**        __                              _\\n *    ____/ /___ _____  ____  ____  ____  (_)_________\\n *   / __  / __ `/ __ \\\\/ __ \\\\/ __ \\\\/ __ \\\\/ / ___/ ___/\\n *  / /_/ / /_/ / /_/ / /_/ / /_/ / / / / / /__(__  )\\n *  \\\\__,_/\\\\__,_/ .___/ .___/\\\\____/_/ /_/_/\\\\___/____/\\n *            /_/   /_/\\n *\\n *  @title A contract for crowd funding\\n *  @author Diego Carranza\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // event Funded(address indexed from, uint256 amount);\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD)\\n            revert FundMe__InsufficientEth();\\n\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders; // load the array to memory\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n}\\n\",\"keccak256\":\"0xaedf6e122e36deb9ea0a6714ea1cd1ecce507e1c7992a43f4271cc626b1d4c7e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xc22ea751d145172d90ce5090dbe29e4edafec3247e8c2add4f7a65330f8a610c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200105438038062001054833981810160405281019061003491906100c6565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610141565b6000815190506100c08161012a565b92915050565b6000602082840312156100dc576100db610125565b5b60006100ea848285016100b1565b91505092915050565b60006100fe82610105565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610133816100f3565b811461013e57600080fd5b50565b60805160601c610ee66200016e600039600081816102ab015281816104a201526105490152610ee66000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108fa565b6101ba565b6040516100b49190610a97565b60405180910390f35b3480156100c957600080fd5b506100d2610203565b6040516100df9190610a97565b60405180910390f35b6100f06102a9565b005b3480156100fe57600080fd5b50610107610538565b6040516101149190610a97565b60405180910390f35b34801561012957600080fd5b50610132610545565b60405161013f9190610a61565b60405180910390f35b34801561015457600080fd5b5061015d61056d565b60405161016a9190610a7c565b60405180910390f35b61017b610596565b005b34801561018957600080fd5b506101a4600480360381019061019f9190610927565b6106c6565b6040516101b19190610a61565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610954565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156103b257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610368575b5050505050905060005b815181101561043d5760008282815181106103da576103d9610dee565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043590610d47565b9150506103bc565b50600067ffffffffffffffff81111561045957610458610e1d565b5b6040519080825280602002602001820160405280156104875781602001602082028036833780820191505090505b506002908051906020019061049d9291906107ea565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104e490610a4c565b60006040518083038185875af1925050503d8060008114610521576040519150601f19603f3d011682016040523d82523d6000602084013e610526565b606091505b505090508061053457600080fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105d360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461070e90919063ffffffff16565b101561060b576040517f0fe41fdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065a9190610abd565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600282815481106106dc576106db610dee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061071a8361074a565b90506000670de0b6b3a764000085836107339190610c5b565b61073d9190610b13565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561079357600080fd5b505afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb9190610981565b5050509150506402540be400816107e29190610b44565b915050919050565b828054828255906000526020600020908101928215610863579160200282015b828111156108625782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061080a565b5b5090506108709190610874565b5090565b5b8082111561088d576000816000905550600101610875565b5090565b6000813590506108a081610e54565b92915050565b6000815190506108b581610e6b565b92915050565b6000813590506108ca81610e82565b92915050565b6000815190506108df81610e82565b92915050565b6000815190506108f481610e99565b92915050565b6000602082840312156109105761090f610e4c565b5b600061091e84828501610891565b91505092915050565b60006020828403121561093d5761093c610e4c565b5b600061094b848285016108bb565b91505092915050565b60006020828403121561096a57610969610e4c565b5b6000610978848285016108d0565b91505092915050565b600080600080600060a0868803121561099d5761099c610e4c565b5b60006109ab888289016108e5565b95505060206109bc888289016108a6565b94505060406109cd888289016108d0565b93505060606109de888289016108d0565b92505060806109ef888289016108e5565b9150509295509295909350565b610a0581610cb5565b82525050565b610a1481610d11565b82525050565b6000610a27600083610ab2565b9150610a3282610e51565b600082019050919050565b610a4681610cf1565b82525050565b6000610a5782610a1a565b9150819050919050565b6000602082019050610a7660008301846109fc565b92915050565b6000602082019050610a916000830184610a0b565b92915050565b6000602082019050610aac6000830184610a3d565b92915050565b600081905092915050565b6000610ac882610cf1565b9150610ad383610cf1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b0857610b07610d90565b5b828201905092915050565b6000610b1e82610cf1565b9150610b2983610cf1565b925082610b3957610b38610dbf565b5b828204905092915050565b6000610b4f82610cc7565b9150610b5a83610cc7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b9957610b98610d90565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610bd657610bd5610d90565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c1357610c12610d90565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c5057610c4f610d90565b5b828202905092915050565b6000610c6682610cf1565b9150610c7183610cf1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610caa57610ca9610d90565b5b828202905092915050565b6000610cc082610cd1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d1c82610d23565b9050919050565b6000610d2e82610d35565b9050919050565b6000610d4082610cd1565b9050919050565b6000610d5282610cf1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8557610d84610d90565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b610e5d81610cb5565b8114610e6857600080fd5b50565b610e7481610cc7565b8114610e7f57600080fd5b50565b610e8b81610cf1565b8114610e9657600080fd5b50565b610ea281610cfb565b8114610ead57600080fd5b5056fea26469706673582212202951b545ff48257fa0244a11a4221f398b77bb1d33ee00555f0acf353c331f6864736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108fa565b6101ba565b6040516100b49190610a97565b60405180910390f35b3480156100c957600080fd5b506100d2610203565b6040516100df9190610a97565b60405180910390f35b6100f06102a9565b005b3480156100fe57600080fd5b50610107610538565b6040516101149190610a97565b60405180910390f35b34801561012957600080fd5b50610132610545565b60405161013f9190610a61565b60405180910390f35b34801561015457600080fd5b5061015d61056d565b60405161016a9190610a7c565b60405180910390f35b61017b610596565b005b34801561018957600080fd5b506101a4600480360381019061019f9190610927565b6106c6565b6040516101b19190610a61565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610954565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156103b257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610368575b5050505050905060005b815181101561043d5760008282815181106103da576103d9610dee565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043590610d47565b9150506103bc565b50600067ffffffffffffffff81111561045957610458610e1d565b5b6040519080825280602002602001820160405280156104875781602001602082028036833780820191505090505b506002908051906020019061049d9291906107ea565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104e490610a4c565b60006040518083038185875af1925050503d8060008114610521576040519150601f19603f3d011682016040523d82523d6000602084013e610526565b606091505b505090508061053457600080fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105d360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461070e90919063ffffffff16565b101561060b576040517f0fe41fdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065a9190610abd565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600282815481106106dc576106db610dee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061071a8361074a565b90506000670de0b6b3a764000085836107339190610c5b565b61073d9190610b13565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561079357600080fd5b505afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb9190610981565b5050509150506402540be400816107e29190610b44565b915050919050565b828054828255906000526020600020908101928215610863579160200282015b828111156108625782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061080a565b5b5090506108709190610874565b5090565b5b8082111561088d576000816000905550600101610875565b5090565b6000813590506108a081610e54565b92915050565b6000815190506108b581610e6b565b92915050565b6000813590506108ca81610e82565b92915050565b6000815190506108df81610e82565b92915050565b6000815190506108f481610e99565b92915050565b6000602082840312156109105761090f610e4c565b5b600061091e84828501610891565b91505092915050565b60006020828403121561093d5761093c610e4c565b5b600061094b848285016108bb565b91505092915050565b60006020828403121561096a57610969610e4c565b5b6000610978848285016108d0565b91505092915050565b600080600080600060a0868803121561099d5761099c610e4c565b5b60006109ab888289016108e5565b95505060206109bc888289016108a6565b94505060406109cd888289016108d0565b93505060606109de888289016108d0565b92505060806109ef888289016108e5565b9150509295509295909350565b610a0581610cb5565b82525050565b610a1481610d11565b82525050565b6000610a27600083610ab2565b9150610a3282610e51565b600082019050919050565b610a4681610cf1565b82525050565b6000610a5782610a1a565b9150819050919050565b6000602082019050610a7660008301846109fc565b92915050565b6000602082019050610a916000830184610a0b565b92915050565b6000602082019050610aac6000830184610a3d565b92915050565b600081905092915050565b6000610ac882610cf1565b9150610ad383610cf1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b0857610b07610d90565b5b828201905092915050565b6000610b1e82610cf1565b9150610b2983610cf1565b925082610b3957610b38610dbf565b5b828204905092915050565b6000610b4f82610cc7565b9150610b5a83610cc7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b9957610b98610d90565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610bd657610bd5610d90565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c1357610c12610d90565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c5057610c4f610d90565b5b828202905092915050565b6000610c6682610cf1565b9150610c7183610cf1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610caa57610ca9610d90565b5b828202905092915050565b6000610cc082610cd1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d1c82610d23565b9050919050565b6000610d2e82610d35565b9050919050565b6000610d4082610cd1565b9050919050565b6000610d5282610cf1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8557610d84610d90565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b610e5d81610cb5565b8114610e6857600080fd5b50565b610e7481610cc7565b8114610e7f57600080fd5b50565b610e8b81610cf1565b8114610e9657600080fd5b50565b610ea281610cfb565b8114610ead57600080fd5b5056fea26469706673582212202951b545ff48257fa0244a11a4221f398b77bb1d33ee00555f0acf353c331f6864736f6c63430008070033",
  "devdoc": {
    "author": "Diego Carranza",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "__                              _    ____/ /___ _____  ____  ____  ____  (_)_________   / __  / __ `/ __ \\/ __ \\/ __ \\/ __ \\/ / ___/ ___/  / /_/ / /_/ / /_/ / /_/ / /_/ / / / / / /__(__  )  \\__,_/\\__,_/ .___/ .___/\\____/_/ /_/_/\\___/____/            /_/   /_/This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}